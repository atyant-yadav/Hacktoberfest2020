#include <bits/stdc++.h>
using namespace std;

vector <int> ar[100001];
vector <int> vis[100001];

void dfs(int v)
{
vis[v]=1;
for(int i=0;i<ar[v].size();i++)
{
    int child = ar[v][i];
    if(vis[child]==0)
    dfs(child);
}
}


int main()
{
 // Enter no of nodes and edges
 int n, m;
 cin>>n>>m;
  
// Create adjacency list
while(m--)
{
    int a, b;
    cin>>a>>b;
    ar[a].push_back(b);
    ar[b].push_back(a);
}

// Finding no of connected components
int cc_count = 0;
for(int i=1;i<=n;i++)
{
    if(vis[i] == 0)
    {
        dfs(i), cc_count++;
    }
}
cout<<cc_count;

return 0;
}
